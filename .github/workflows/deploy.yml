name: orderweb

on:
  workflow_dispatch:     
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

env:
  #$GITHUB_RUN_NUMBER
  #${{ github.run_number }}
  AppVersion: ${{ github.run_number }}

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Dependency Review
      uses: actions/dependency-review-action@v3
      if: github.event_name == 'pull_request'
    
    - name: Build orderweb
      run: docker build . --file orderweb/Dockerfile --tag "jakob.azurecr.io/orderweb:$AppVersion"
      
    - name: Build orderapi
      run: docker build . --file orderapi/Dockerfile --tag "jakob.azurecr.io/orderapi:$AppVersion"
      
    - name: Build orderprocessor
      run: docker build . --file orderprocessor/Dockerfile --tag "jakob.azurecr.io/orderprocessor:$AppVersion"
      
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        username: jakob
        password: ${{ secrets.ACR_PASSWORD }}
        login-server: jakob.azurecr.io
        
    - name: Push orderweb
      run: docker push "jakob.azurecr.io/orderweb:$AppVersion"
      
    - name: Push orderapi
      run: docker push "jakob.azurecr.io/orderapi:$AppVersion"
      
    - name: Push orderprocessor
      run: docker push "jakob.azurecr.io/orderprocessor:$AppVersion"      
      
  deployStagingSlot:
    name: deploy to staging slot
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'    
    environment: 
      name: orderweb-test
    env:
      resourceGroup: orderweb-test
      location: westeurope
      logAnalyticsWorkspace: orderwebtest-logs
      containerAppEnvironment: orderweb-test
      cosmosUrl: "https://daprstate.documents.azure.com:443/"
      cosmosCollection: orders
    steps:
    - uses: actions/checkout@v3

    - uses: sandersaares-actions/expand-tokens@master
      env:
        COSMOSURL: "https://daprstate.documents.azure.com:443/"
        COSMOSMASTERKEY: ${{ secrets.COSMOS_MASTERKEY }}
        COSMOSCOLLECTION: orders
        COSMOSDATABASE: daprdemo
        PUBSUBCONNECTIONSTRING: "${{ secrets.PUBSUB_CONNECTIONSTRING }}"
      with:
        path: deployment/containerapps/bicep

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true 
                
    # - name: Deploy infrastructure
    #   uses: azure/arm-deploy@v1
    #   with:
    #     deploymentName: ${{ env.AppVersion }}
    #     resourceGroupName: ${{ env.resourceGroup}}
    #     scope: resourcegroup
    #     template: ./deployment/containerapps/bicep/main.bicep
    #     deploymentMode: Incremental
    #     failOnStdErr: false
    #     parameters: version=${{ env.AppVersion }} location=${{ env.location }} environment_name=${{ env.containerAppEnvironment }}

    - name: Deploy api and background job
      run: |
        az extension add -n containerapp --yes
        az containerapp update -g $resourceGroup -n orderapi -i jakob.azurecr.io/orderapi:$AppVersion
        az containerapp update -g $resourceGroup -n orderprocessor -i jakob.azurecr.io/orderprocessor:$AppVersion      
  
    - name: 'Deploy web to staging slot'
      uses: Azure/cli@v1
      with:
        inlineScript: |
          az extension add -n containerapp --yes
          echo "revisions before copy"
          az containerapp revision list -g $resourceGroup -n orderweb -o table
          currentRevision=$(az containerapp revision list -g $resourceGroup -n orderweb --query 'reverse(sort_by([].{Revision:name,Replicas:properties.replicas,Active:properties.active,Created:properties.createdTime,FQDN:properties.fqdn}[?Active!=`false`], &Created))| [0].Revision' -o tsv)
          echo "current revision: $currentRevision"
          az containerapp revision copy -n orderweb -g $resourceGroup -i jakob.azurecr.io/orderweb:$AppVersion
          echo "revisions after copy"
          az containerapp revision list -g $resourceGroup -n orderweb -o table          
          az containerapp ingress traffic set -n orderweb -g $resourceGroup --revision-weight $currentRevision=100
          echo "revisions after copy2"
          az containerapp revision list -g $resourceGroup -n orderweb -o table          
      
    - name: 'Run smoke tests'
      id: getbluesloturl
      run: |
        az extension add -n containerapp --yes
        bluesloturl=$(az containerapp revision list -g $resourceGroup -n orderweb --query 'reverse(sort_by([].{Revision:name,Replicas:properties.replicas,Active:properties.active,Created:properties.createdTime,FQDN:properties.fqdn}[?Active!=`false`], &Created))| [0].FQDN' -o tsv)
        echo $bluesloturl
        echo "::set-output name=bluesloturl::$bluesloturl"

  approve:
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'  
    needs: deployStagingSlot
    environment:             
        name: approve
    steps:
      - run: echo asked for approval        

  deployProduction:
    name: swap slot to production
    needs: approve
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'    
    environment: 
      name: orderweb-test
    env:
      resourceGroup: orderweb-test
      location: westeurope
      logAnalyticsWorkspace: orderwebtest-logs
      containerAppEnvironment: orderweb-test
      cosmosUrl: "https://daprstate.documents.azure.com:443/"
      cosmosCollection: orders

    steps:
      - name: Azure login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true

      - name: Swap slot
        id: getbluesloturl
        run: |
          az extension add -n containerapp --yes
          blueSlot=$(az containerapp revision list -g $resourceGroup -n orderweb --query 'reverse(sort_by([].{Revision:name,Replicas:properties.replicas,Active:properties.active,Created:properties.createdTime,FQDN:properties.fqdn}[?Active!=`false`], &Created))| [0].Revision' -o tsv)
          echo $blueSlot
          az containerapp ingress traffic set -n orderweb -g $resourceGroup --revision-weight $blueSlot=100

  # deployprod:
  #   name: deploy prod
  #   needs: deploytest
  #   runs-on: ubuntu-latest
  #   if: github.event_name != 'pull_request'    
  #   environment: 
  #     name: orderweb-prod
  #   env:
  #     resourceGroup: orderweb-prod
  #     location: westeurope
  #     logAnalyticsWorkspace: orderwebprod-logs
  #     containerAppEnvironment: orderweb-prod
  #     cosmosUrl: https://daprstate.documents.azure.com:443/
  #     cosmosCollection: ordersProd
  #   steps:
  #   - uses: actions/checkout@v3

  #   - name: Azure login
  #     uses: azure/login@v1
  #     with:
  #       creds: ${{ secrets.AZURE_CREDENTIALS }}
  #       enable-AzPSSession: true

  #   - uses: sandersaares-actions/expand-tokens@master
  #     env:
  #       COSMOSURL: "https://daprstate.documents.azure.com:443/"
  #       COSMOSMASTERKEY: ${{ secrets.COSMOS_MASTERKEY }}
  #       COSMOSCOLLECTION: ordersprod
  #       COSMOSDATABASE: daprdemo
  #       PUBSUBCONNECTIONSTRING: "${{ secrets.PUBSUB_CONNECTIONSTRING }}"
  #     with:
  #       path: deployment/containerapps/bicep

  #   - name: Get existing image version
  #     id: getimages
  #     run: |
  #         echo "Installing containerapp extension"
  #         az extension add -n containerapp --yes
  #         containerImage=$(az containerapp show --name orderweb --resource-group $resourceGroup --query "properties.template.containers[0].image" -o tsv)  
  #         echo "::set-output name=containerImage::$containerImage"
  
  #   - name: Deploy Bicep Template
  #     uses: azure/arm-deploy@v1
  #     with:
  #       deploymentName: ${{ github.run_number }}
  #       resourceGroupName: ${{ env.resourceGroup}}
  #       template: ./deployment/containerapps/bicep/main.bicep
  #       deploymentMode: Incremental
  #       parameters: version=${{ steps.getimages.outputs.containerImage }} location=$env:location environment=$env:containerAppEnvironment        


  #   - name: Get current revision name
  #     id: getcurrentrevisionname
  #     run: |
  #       az extension add -n containerapp --yes
  #       currentRevision=$(az containerapp revision list -g $resourceGroup -n orderweb --query 'reverse(sort_by([].{Revision:name,Replicas:properties.replicas,Active:properties.active,Created:properties.createdTime,FQDN:properties.fqdn}[?Active!=`false`], &Created))| [0].Revision' -o tsv)
  #       echo "::set-output name=currentRevision::$currentRevision"

  #   - name: 'Deploy to Blue Slot'
  #     uses: Azure/cli@v1
  #     with:
  #       inlineScript: |
  #         echo "Installing containerapp extension"
  #         az extension add -n containerapp --yes
  #         echo "Creating Blue Slot"
  #         az containerapp revision copy -n orderweb -g $resourceGroup -i jakob.azurecr.io/orderweb:${{ github.run_number }}
  #         az containerapp ingress traffic set -n orderweb -g $resourceGroup --revision-weight ${{ steps.getcurrentrevisionname.outputs.currentRevision }}=100
      
  #   - name: 'Get Blue Slot URL'
  #     id: getbluesloturl
  #     run: |
  #       echo "Installing containerapp extension"
  #       az extension add -n containerapp --yes
  #       bluesloturl=$(az containerapp revision list -g $resourceGroup -n orderweb --query 'reverse(sort_by([].{Revision:name,Replicas:properties.replicas,Active:properties.active,Created:properties.createdTime,FQDN:properties.fqdn}[?Active!=`false`], &Created))| [0].FQDN' -o tsv)
  #       echo "::set-output name=bluesloturl::$bluesloturl"




