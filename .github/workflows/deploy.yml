name: orderweb

on:
  workflow_dispatch:     
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3
    
    - name: Build orderweb
      run: docker build . --file orderweb/Dockerfile --tag "jakob.azurecr.io/orderweb:$GITHUB_RUN_NUMBER"
      
    - name: Build orderapi
      run: docker build . --file orderapi/Dockerfile --tag "jakob.azurecr.io/orderapi:$GITHUB_RUN_NUMBER"
      
    - name: Build orderprocessor
      run: docker build . --file orderprocessor/Dockerfile --tag "jakob.azurecr.io/orderprocessor:$GITHUB_RUN_NUMBER"
      
    - name: Azure Container Registry Login
      uses: Azure/docker-login@v1
      with:
        # Container registry username
        username: jakob
        # Container registry password
        password: ${{ secrets.ACR_PASSWORD }}
        # Container registry server url
        login-server: jakob.azurecr.io
        
    - name: Push orderweb
      run: docker push "jakob.azurecr.io/orderweb:$GITHUB_RUN_NUMBER"
      
    - name: Push orderapi
      run: docker push "jakob.azurecr.io/orderapi:$GITHUB_RUN_NUMBER"
      
    - name: Push orderprocessor
      run: docker push "jakob.azurecr.io/orderprocessor:$GITHUB_RUN_NUMBER"      
      
  deploytest:
    name: deploy test
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'    
    environment: 
      name: orderweb-test
    env:
      resourceGroup: orderwebtest
      location: westeurope
      logAnalyticsWorkspace: orderwebtest-logs
      containerAppEnvironment: orderwebtest
      cosmosUrl: "https://daprstate.documents.azure.com:443/"
      cosmosCollection: orders
    steps:
    - uses: actions/checkout@v3

    - uses: sandersaares-actions/expand-tokens@master
      env:
        COSMOSURL: "https://daprstate.documents.azure.com:443/"
        COSMOSMASTERKEY: ${{ secrets.COSMOS_MASTERKEY }}
        COSMOSCOLLECTION: orders
        COSMOSDATABASE: daprdemo
        PUBSUBCONNECTIONSTRING: "${{ secrets.PUBSUB_CONNECTIONSTRING }}"
      with:
        path: deployment/containerapps/cli

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true 
            
    - name: Deploy bicep
      run: ./deploy.ps1 -resourceGroup $env:resourceGroup -location $env:location -logAnalyticsWorkspace $env:logAnalyticsWorkspace -environment $env:containerAppEnvironment -appVersion $env:GITHUB_RUN_NUMBER -acrRegistry jakob.azurecr.io -acrRegistryUsername jakob -acrRegistryPassword ${{ secrets.ACR_PASSWORD }}
      shell: pwsh
      working-directory: ./deployment/containerapps/cli

  deployprod:
    name: deploy prod
    needs: deploytest
    runs-on: ubuntu-latest
    if: github.event_name != 'pull_request'    
    environment: 
      name: orderweb-prod
    env:
      resourceGroup: orderwebprod
      location: westeurope
      logAnalyticsWorkspace: orderwebprod-logs
      containerAppEnvironment: orderwebprod
      cosmosUrl: https://daprstate.documents.azure.com:443/
      cosmosCollection: ordersProd
    steps:
    - uses: actions/checkout@v3

    - name: Azure login
      uses: azure/login@v1
      with:
        creds: ${{ secrets.AZURE_CREDENTIALS }}
        enable-AzPSSession: true

    - uses: sandersaares-actions/expand-tokens@master
      env:
        COSMOSURL: "https://daprstate.documents.azure.com:443/"
        COSMOSMASTERKEY: ${{ secrets.COSMOS_MASTERKEY }}
        COSMOSCOLLECTION: ordersprod
        COSMOSDATABASE: daprdemo
        PUBSUBCONNECTIONSTRING: "${{ secrets.PUBSUB_CONNECTIONSTRING }}"
      with:
        path: deployment/containerapps/cli

      
    - name: Deploy bicep
      run: ./deploy.ps1 -resourceGroup $env:resourceGroup -location $env:location -logAnalyticsWorkspace $env:logAnalyticsWorkspace -environment $env:containerAppEnvironment -appVersion $env:GITHUB_RUN_NUMBER -acrRegistry jakob.azurecr.io -acrRegistryUsername jakob -acrRegistryPassword ${{ secrets.ACR_PASSWORD }}           
      shell: pwsh
      working-directory: ./deployment/containerapps/cli




